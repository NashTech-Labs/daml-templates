-- Copyright (c) 2020 The DAML Authors. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0


module Main where
--demat account through which requests are processed
template Demat
  with
    owner : Party
    broker : Party
    amount : Int
    max_amount : Int
    buy_Share : Text

  where
    ensure amount >= 0 && amount <= max_amount
    signatory broker
    observer owner

    controller broker can 
--autorization of user. unautorized user will not be able to make requests
      nonconsuming AuthorizeInvestor : ContractId Demat   --Makes a choice non-consuming,exercising the choice does not archive the contract.
        with 
          investor : Party
          updated_Token : Int
        
        do create Demat with 
            owner = investor
            broker
            amount = 0
            max_amount = updated_Token
            buy_Share
--updating the account after buying and adding amount to company account
      BuyShares : (ContractId Demat, ContractId Demat) 
        with
          quantity : Int
          toDematId : ContractId Demat 
        do 
          remaining_amount <- create this with amount = amount - quantity 
          toDemat <- fetch toDematId
          _ <- exercise toDematId Archive 
          updatedAccount <- create toDemat with amount = toDemat.amount + quantity
          return(remaining_amount, updatedAccount)

--accepting user request 
      nonconsuming AcceptRequest: (ContractId Demat, ContractId Demat)
        with requestId : ContractId ShareRequest
        do 
          request <- fetch requestId
          exercise self BuyShares with
            quantity = request.quantity
            toDematId = request.dematId


    controller owner can
--owner can create a share request
      nonconsuming RequestShare : ContractId ShareRequest
        with 
          requestQuantity : Int
        do create ShareRequest with 
            broker = this.broker
            owner = this.owner
            dematId = self
            quantity = requestQuantity
            buy_Share = this.buy_Share

--user can request shares using this template
template ShareRequest
  with
    broker : Party
    owner : Party
    dematId : ContractId Demat
    quantity : Int
    buy_Share : Text
  where
    signatory owner, broker
  